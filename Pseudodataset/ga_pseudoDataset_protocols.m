%% PSEUDO-DATASET SCRIPT - GA modifidcation?
% THIS SCRIPT USES THE gaKernik CLASS AND ITS METHODS TO GENERATE DATA

% This pseudo-dataset contains data from a population of 10 cell variants
% generated using the Kernik et al (2019) model of an iPSC-CM. Variants are
% generated by multiplying ion channel conductances by scaling factors
% randomly sampled from lognormal distribution

% The data were collected by simulating a number of protocols on the cells:

% 1) Pacing at various cycle lengths: spontaneous beating, 600ms, 400ms
% 2) Changed extracellular ion concentrations: Ca(1.0, 2.6), K(5.0, 5.8)
% 3) Ion channel block: 25%, 50% ICaL; 15%, 35% IKr

% The final dataset contains action potential and calcium transient time
% courses.

%% LOAD POPULATION
conds = readmatrix('Pseudodataset/saved_data/ground_truth_conductances.xlsx');
popsize = size(conds,1);
cells = cell(1,popsize);
  for i = 1:popsize
       k19 = gaKernik19([-75.7444536163477,0.338969592726776,0.000203113729306209,7.16928093750999,104.748824394112,0,0.000386686486786781,0.165948056753057,0.927145173320106,0.321984775889061,0.452222061313948,0.157787210225653,0.743251868606151,0.121059208476135,0.0292207648412020,0.00620538308203812,0.736108314102295,0.000264118925707198,0.000263623380304203,0.746780367359425,0.0122283684412607,0.000154416932298621,0.0123158737520428,0], ...
           i) ; % requires "cellID" - just using cell # here
       scaleCell(k19, conds(i,:), ones(1,58))
       saveX_conductance(k19, conds(i,:))
       k19.name = [k19.name, '_', int2str(i)];
       cells{i} = k19;
  end
save ga_pseudocells cells popsize

%% Set globals:
clear

T = 310.0 ;         % (K) able to manipulate this?
Nao = 151.0 ;       % (mM) 145, 140 ? able to manipulate this?
Ko = 5.4 ;          % (mM) able to manipulate this?
Cao = 1.8 ;         % (mM) able to manipulate this?

load ga_pseudocells cells popsize

%% Spontaneous beating
% Spontaneous beating for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1)
    odeSolver(cells{i}) ;
end
ss_spont = cells;
disp('spont done');

%% Paced beating: PCL = 800ms
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;
end
ss_pcl800 = cells;
disp('pcl800 done');

%% Paced beating: PCL = 600ms
% Paced beating at PCL = 600ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 500, 599, 1) ;
    odeSolver(cells{i}) ;   
end
ss_pcl600 = cells;
disp('pcl600 done');

%% Hypocalcemia: Cao = 1.0mM
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Cao = 1.0 ;          %#ok<NASGU>
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;
end
ss_caolow = cells;
Cao = 1.8 ;         % return to normal
disp('caolow done');

%% Hypercalcemia: Cao = 2.6mM
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Cao = 2.6 ;          %#ok<NASGU>
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ; 
end
ss_caohigh = cells;
Cao = 1.8 ;         % return to normal
disp('caohigh done');

%% Hypokalemia: Ko = 5.0mM
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Ko = 5.0 ;
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;  
end
ss_kolow = cells;
Ko = 5.4 ;         % return to normal
disp('kolow done');

%% Hyperkalemia: Ko = 5.8mM
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Ko = 5.8 ;
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ; 
end
ss_kohigh = cells;
Ko = 5.4 ;         % return to normal
disp('kohigh done');

%% IKr block: 15%
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
ikrblock = ones(1,17);
ikrblock(6) = 0.85;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, ikrblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ikr15 = cells;
disp('ikr15 done');

%% IKr block: 30%
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
ikrblock = ones(1,17);
ikrblock(6) = 0.70;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, ikrblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;   
end
ss_ikr30 = cells;
disp('ikr30 done');

%% ICaL block: 25%
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
icalblock = ones(1,17);
icalblock(3) = 0.75;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, icalblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;  
end
ss_ical25 = cells;
disp('ical25 done');

%% ICaL block: 50%
% Paced beating at PCL = 800ms for 300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
icalblock = ones(1,17);
icalblock(3) = 0.5;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, icalblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 60, 375, 799, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ical50 = cells;
disp('ical50 done');

%% PROTOCOLS ON SPONTANEOUSLY BEATING CELLS:
%% Hypocalcemia: Cao = 1.0mM
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Cao = 1.0 ;          %#ok<NASGU>
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_caolow_sp = cells;
Cao = 1.8 ;         % return to normal
disp('caolow_sp done');

%% Hypercalcemia: Cao = 1.8mM
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Cao = 2.6 ;          %#ok<NASGU>
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_caohigh_sp = cells;
Cao = 1.8 ;         % return to normal
disp('caohigh_sp done');

%% Hypokalemia: Ko = 5.0mM
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Ko = 5.0 ;
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_kolow_sp = cells;
Ko = 5.4 ;         % return to normal
disp('kolow_sp done');

%% Hyperkalemia: Ko = 5.8mM
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
Ko = 5.8 ;
for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_kohigh_sp = cells;
Ko = 5.4 ;         % return to normal
disp('kohigh_sp done');

%% IKr block: 15%
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
ikrblock = ones(1,17);
ikrblock(6) = 0.85;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, ikrblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ikr15_sp = cells;
disp('ikr15_sp done');

%% IKr block: 30%
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
ikrblock = ones(1,17);
ikrblock(6) = 0.70;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, ikrblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ikr30_sp = cells;
disp('ikr30_sp done');

%% ICaL block: 25%
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
icalblock = ones(1,17);
icalblock(3) = 0.75;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, icalblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ical25_sp = cells;
disp('ical25_sp done');

%% ICaL block: 50%
% Spontaneous beating for ~300s
% setUpPacingProtocol(k19CM, amplitudes, numPulses, precedingTime, pulseDurations)
load ga_pseudocells
icalblock = ones(1,17);
icalblock(3) = 0.5;

for i = 1:popsize
    setEnvironment(cells{i}, T, Nao, Cao, Ko) ;
    setUpDrugApplication(cells{i}, icalblock, zeros(1,17), ones(1,17)*300000)
    setUpPacingProtocol(cells{i}, 0, 300, 999, 1) ;
    odeSolver(cells{i}) ;    
end
ss_ical50_sp = cells;
disp('ical50_sp done');

%% SAVE & PROCESS
save('Pseudodataset/saved_data/ga_subsets.mat', 'ss*', '-v7.3')
%subset_processing
%% All Plots:
%allPlots

%% Helper functions:
function makeFigure_bars(cells)
fig = figure;
for i = 1:length(cells)
    subplot(2,5,i)
    bar(log(cells{i}.conductances.scaling))
    ylim([-1, 1])
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_spont(cells)
fig = figure;
for i = 1:length(cells)
    cell_start = find(cells{i}.state.t > 96000);
    cell_end = find(cells{i}.state.t > 99800);
    if i <=5
        subplot(4,5,i)
        plot(cells{i}.state.t(cell_start(1):cell_end(1))-96000, cells{i}.state.Y(cell_start(1):cell_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        subplot(4,5,i+5)
        plot(cells{i}.state.t(cell_start(1):cell_end(1))-96000, cells{i}.state.Y(cell_start(1):cell_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 11e-4])
    else
        subplot(4,5,i+5)
        plot(cells{i}.state.t(cell_start(1):cell_end(1))-96000, cells{i}.state.Y(cell_start(1):cell_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        subplot(4,5,i+10)
        plot(cells{i}.state.t(cell_start(1):cell_end(1))-96000, cells{i}.state.Y(cell_start(1):cell_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 11e-4])
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_pacing(slow, fast)
fig = figure;
for i = 1:length(slow)
    slow_start = find(slow{i}.state.t > 98000);
    slow_end = find(slow{i}.state.t > 99800);
    fast_start = find(fast{i}.state.t > 98000);
    fast_end = find(fast{i}.state.t > 99800);
    
    if i <=5
        subplot(8,5,i)
        plot(slow{i}.state.t(slow_start(1):slow_end(1))-98000, slow{i}.state.Y(slow_start(1):slow_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        subplot(8,5,i+5)
        plot(fast{i}.state.t(fast_start(1):fast_end(1))-98000, fast{i}.state.Y(fast_start(1):fast_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        subplot(8,5,i+10)
        plot(slow{i}.state.t(slow_start(1):slow_end(1))-98000, slow{i}.state.Y(slow_start(1):slow_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        subplot(8,5,i+15)
        plot(fast{i}.state.t(fast_start(1):fast_end(1))-98000, fast{i}.state.Y(fast_start(1):fast_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
    else
        
        subplot(8,5,i+15)
        plot(slow{i}.state.t(slow_start(1):slow_end(1))-98000, slow{i}.state.Y(slow_start(1):slow_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        subplot(8,5,i+20)
        plot(fast{i}.state.t(fast_start(1):fast_end(1))-98000, fast{i}.state.Y(fast_start(1):fast_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        subplot(8,5,i+25)
        plot(slow{i}.state.t(slow_start(1):slow_end(1))-98000, slow{i}.state.Y(slow_start(1):slow_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        subplot(8,5,i+30)
        plot(fast{i}.state.t(fast_start(1):fast_end(1))-98000, fast{i}.state.Y(fast_start(1):fast_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_ionconc(base, cond)
fig = figure ;
for i = 1:length(base)
    base_start = find(base{i}.state.t > 99300);
    base_end = find(base{i}.state.t > 99800);
    cond_start = find(cond{i}.state.t > 99300);
    cond_end = find(cond{i}.state.t > 99800);
    if i <=5
        subplot(4,5,i)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        plot(cond{i}.state.t(cond_start(1):cond_end(1))-99300, cond{i}.state.Y(cond_start(1):cond_end(1), 1), 'r', 'LineWidth', 2.5)
        subplot(4,5,i+5)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        plot(cond{i}.state.t(cond_start(1):cond_end(1))-99300, cond{i}.state.Y(cond_start(1):cond_end(1), 3), 'g', 'LineWidth', 2.5)
    else
        subplot(4,5,i+5)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        plot(cond{i}.state.t(cond_start(1):cond_end(1))-99300, cond{i}.state.Y(cond_start(1):cond_end(1), 1), 'r', 'LineWidth', 2.5)
        subplot(4,5,i+10)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        plot(cond{i}.state.t(cond_start(1):cond_end(1))-99300, cond{i}.state.Y(cond_start(1):cond_end(1), 3), 'g', 'LineWidth', 2.5)
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_drug(base, drug25, drug50)
fig = figure ;
for i = 1:length(base)
    base_start = find(base{i}.state.t > 99300);
    base_end = find(base{i}.state.t > 99800);
    drug25_start = find(drug25{i}.state.t > 99300);
    drug25_end = find(drug25{i}.state.t > 99800);
    drug50_start = find(drug50{i}.state.t > 99300);
    drug50_end = find(drug50{i}.state.t > 99800);
    if i <=5
        subplot(4,5,i)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        plot(drug25{i}.state.t(drug25_start(1):drug25_end(1))-99300, drug25{i}.state.Y(drug25_start(1):drug25_end(1), 1), 'r', 'LineWidth', 2.5)
        plot(drug50{i}.state.t(drug50_start(1):drug50_end(1))-99300, drug50{i}.state.Y(drug50_start(1):drug50_end(1), 1), 'r:', 'LineWidth', 2.5)
        subplot(4,5,i+5)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        plot(drug25{i}.state.t(drug25_start(1):drug25_end(1))-99300, drug25{i}.state.Y(drug25_start(1):drug25_end(1), 3), 'g', 'LineWidth', 2.5)
        plot(drug50{i}.state.t(drug50_start(1):drug50_end(1))-99300, drug50{i}.state.Y(drug50_start(1):drug50_end(1), 3), 'g:', 'LineWidth', 2.5)
    else
        subplot(4,5,i+5)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 1), 'b', 'LineWidth', 2.5)
        ylim([-80, 85])
        plot(drug25{i}.state.t(drug25_start(1):drug25_end(1))-99300, drug25{i}.state.Y(drug25_start(1):drug25_end(1), 1), 'r', 'LineWidth', 2.5)
        plot(drug50{i}.state.t(drug50_start(1):drug50_end(1))-99300, drug50{i}.state.Y(drug50_start(1):drug50_end(1), 1), 'r:', 'LineWidth', 2.5)
        subplot(4,5,i+10)
        hold on
        plot(base{i}.state.t(base_start(1):base_end(1))-99300, base{i}.state.Y(base_start(1):base_end(1), 3), 'k', 'LineWidth', 2.5)
        ylim([0, 6e-4])
        plot(drug25{i}.state.t(drug25_start(1):drug25_end(1))-99300, drug25{i}.state.Y(drug25_start(1):drug25_end(1), 3), 'g', 'LineWidth', 2.5)
        plot(drug50{i}.state.t(drug50_start(1):drug50_end(1))-99300, drug50{i}.state.Y(drug50_start(1):drug50_end(1), 3), 'g:', 'LineWidth', 2.5)
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_ionconc_sp(base, cond)
fig = figure ;
for i = 1:length(base)
    [base_APt,base_APv,base_APinfo]  = APextract_custom(base{i}.state.t, base{i}.state.Y(:,1), base{i}.protocol.stimtimes);
    [base_CaTt,base_CaTcai,~] = CaTextract_custom(base{i}.state.t, base{i}.state.Y(:,3), base{i}.protocol.stimtimes);
    [cond_APt,cond_APv,cond_APinfo] = APextract_custom(cond{i}.state.t, cond{i}.state.Y(:,1), cond{i}.protocol.stimtimes);
    [cond_CaTt,cond_CaTcai,~] = CaTextract_custom(cond{i}.state.t, cond{i}.state.Y(:,3), cond{i}.protocol.stimtimes);
    
    if isempty(base_APt) || length(base_APt) > 30000
        base_APt = base{i}.state.t(end - 2000:end) - base{i}.state.t(end - 2000) ;
        base_APv = base{i}.state.Y(end - 2000:end, 1);
    end
    
    if isempty(cond_APt)|| length(cond_APt) > 30000
        cond_APt = cond{i}.state.t(end - 2000:end) - cond{i}.state.t(end - 2000) ;
        cond_APv = cond{i}.state.Y(end - 2000:end, 1);
    end
    
    if isempty(base_CaTt) || length(base_CaTt) > 30000
        base_CaTt = base{i}.state.t(end - 2000:end) - base{i}.state.t(end - 2000) ;
        base_CaTcai = base{i}.state.Y(end - 2000:end, 3);
    end
    
    if isempty(cond_CaTt) || length(cond_CaTt) > 30000
        cond_CaTt = cond{i}.state.t(end - 2000:end) - cond{i}.state.t(end - 2000) ;
        cond_CaTcai = cond{i}.state.Y(end - 2000:end, 3);
    end
    
    if base_APt(end) > cond_APt(end)
        V_cond = interp1(cond_APt,cond_APv,base_APt);
        V_base = base_APv;
        APt = base_APt ;
    else
        V_cond = cond_APv ;
        V_base = interp1(base_APt,base_APv,cond_APt);
        APt = cond_APt ;
    end
    
    if base_CaTt(end) > cond_CaTt(end)
        CaT_cond = interp1(cond_CaTt,cond_CaTcai,base_CaTt);
        CaT_base = base_CaTcai;
        CaTt = base_CaTt ;
    else
        CaT_cond = cond_CaTcai ;
        CaT_base = interp1(base_CaTt,base_CaTcai,cond_CaTt);
        CaTt = cond_CaTt ;
    end
    
    if i <=5
        subplot(4,5,i)
        hold on
        plot(APt, V_base, 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        plot(APt, V_cond, 'r', 'LineWidth', 2.5)
        legend(['APD90:',num2str(round(base_APinfo(3))), ', freq:', num2str(round(base_APinfo(4),2))], ['APD90:',num2str(round(cond_APinfo(3))), ', freq:', num2str(round(cond_APinfo(4),2))])
        subplot(4,5,i+5)
        hold on
        plot(CaTt, CaT_base, 'k', 'LineWidth', 2.5)
        ylim([0, 12e-4])
        plot(CaTt, CaT_cond, 'g', 'LineWidth', 2.5)
        legend(['peak:',num2str(round(max(CaT_base),5))], ['peak:',num2str(round(max(CaT_cond),5))])
        
    else
        subplot(4,5,i+5)
        hold on
        plot(APt, V_base, 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        plot(APt, V_cond, 'r', 'LineWidth', 2.5)
        legend(['APD90:',num2str(round(base_APinfo(3))), ', freq:', num2str(round(base_APinfo(4),2))], ['APD90:',num2str(round(cond_APinfo(3))), ', freq:', num2str(round(cond_APinfo(4),2))])
        subplot(4,5,i+10)
        hold on
        plot(CaTt, CaT_base, 'k', 'LineWidth', 2.5)
        ylim([0, 12e-4])
        plot(CaTt, CaT_cond, 'g', 'LineWidth', 2.5)
        legend(['peak:',num2str(round(max(CaT_base),5))], ['peak:',num2str(round(max(CaT_cond),5))])
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function makeFigure_drug_sp(base, drug25, drug50)
fig = figure ;
for i = 1:length(base)
    [base_APt,base_APv,base_APinfo]  = APextract_custom(base{i}.state.t, base{i}.state.Y(:,1), base{i}.protocol.stimtimes);
    [base_CaTt,base_CaTcai,~] = CaTextract_custom(base{i}.state.t, base{i}.state.Y(:,3), base{i}.protocol.stimtimes);
    [drug25_APt,drug25_APv,drug25_APinfo] = APextract_custom(drug25{i}.state.t, drug25{i}.state.Y(:,1), drug25{i}.protocol.stimtimes);
    [drug25_CaTt,drug25_CaTcai,~] = CaTextract_custom(drug25{i}.state.t, drug25{i}.state.Y(:,3), drug25{i}.protocol.stimtimes);
    [drug50_APt,drug50_APv,drug50_APinfo] = APextract_custom(drug50{i}.state.t, drug50{i}.state.Y(:,1), drug50{i}.protocol.stimtimes);
    [drug50_CaTt,drug50_CaTcai,~] = CaTextract_custom(drug50{i}.state.t, drug50{i}.state.Y(:,3), drug50{i}.protocol.stimtimes);
    
    if isempty(base_APt) || length(base_APt) > 30000
        base_APt = base{i}.state.t(end - 2000:end) - base{i}.state.t(end - 2000) ;
        base_APv = base{i}.state.Y(end - 2000:end, 1);
    end
    
    if isempty(drug25_APt)|| length(drug25_APt) > 30000
        drug25_APt = drug25{i}.state.t(end - 2000:end) - drug25{i}.state.t(end - 2000) ;
        drug25_APv = drug25{i}.state.Y(end - 2000:end, 1);
    end
    
    if isempty(drug50_APt)|| length(drug50_APt) > 30000
        drug50_APt = drug50{i}.state.t(end - 2000:end) - drug50{i}.state.t(end - 2000) ;
        drug50_APv = drug50{i}.state.Y(end - 2000:end, 1);
    end
    
    if isempty(base_CaTt) || length(base_CaTt) > 30000
        base_CaTt = base{i}.state.t(end - 2000:end) - base{i}.state.t(end - 2000) ;
        base_CaTcai = base{i}.state.Y(end - 2000:end, 3);
    end
    
    if isempty(drug25_CaTt) || length(drug25_CaTt) > 30000
        drug25_CaTt = drug25{i}.state.t(end - 2000:end) - drug25{i}.state.t(end - 2000) ;
        drug25_CaTcai = drug25{i}.state.Y(end - 2000:end, 3);
    end
    
    if isempty(drug50_CaTt) || length(drug50_CaTt) > 30000
        drug50_CaTt = drug50{i}.state.t(end - 2000:end) - drug50{i}.state.t(end - 2000) ;
        drug50_CaTcai = drug50{i}.state.Y(end - 2000:end, 3);
    end
    
    
    if base_APt(end) > drug25_APt(end)
        V_drug25 = interp1(drug25_APt,drug25_APv,base_APt);
        V_base = base_APv;
        APt = base_APt ;
    else
        V_drug25 = drug25_APv ;
        V_base = interp1(base_APt,base_APv,drug25_APt);
        APt = drug25_APt ;
    end
    
    if APt(end) > drug50_APt(end)
        V_drug50 = interp1(drug50_APt,drug50_APv,APt);
    else
        V_drug50 = drug50_APv ;
        V_base = interp1(base_APt,base_APv,drug50_APt);
        V_drug25 = interp1(drug25_APt,drug25_APv,drug50_APt);
        APt = drug50_APt ;
    end
    
    
    if base_CaTt(end) > drug25_CaTt(end)
        CaT_drug25 = interp1(drug25_CaTt,drug25_CaTcai,base_CaTt);
        CaT_base = base_CaTcai;
        CaTt = base_CaTt ;
    else
        CaT_drug25 = drug25_CaTcai ;
        CaT_base = interp1(base_CaTt,base_CaTcai,drug25_CaTt);
        CaTt = drug25_CaTt ;
    end
    
    if CaTt(end) > drug50_CaTt(end)
        CaT_drug50 = interp1(drug50_CaTt,drug50_CaTcai,CaTt);
    else
        CaT_drug50 = drug50_CaTcai ;
        CaT_base = interp1(base_CaTt,base_CaTcai,drug50_CaTt);
        CaT_drug25 = interp1(drug25_CaTt,drug25_CaTcai,drug50_CaTt);
        CaTt = drug50_CaTt ;
    end
    
    if i <=5
        subplot(4,5,i)
        hold on
        plot(APt, V_base, 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        plot(APt, V_drug25, 'r', 'LineWidth', 2.5)
        plot(APt, V_drug50, 'r:', 'LineWidth', 2.5)
        legend(['APD90:',num2str(round(base_APinfo(3))), ', freq:', num2str(round(base_APinfo(4),2))],...
            ['APD90:',num2str(round(drug25_APinfo(3))), ', freq:', num2str(round(drug25_APinfo(4),2))],...
            ['APD90:',num2str(round(drug50_APinfo(3))), ', freq:', num2str(round(drug50_APinfo(4),2))])
        
        subplot(4,5,i+5)
        hold on
        plot(CaTt, CaT_base, 'k', 'LineWidth', 2.5)
        ylim([0,12e-4])
        plot(CaTt, CaT_drug25, 'g', 'LineWidth', 2.5)
        plot(CaTt, CaT_drug50, 'g:', 'LineWidth', 2.5)
        legend(['peak:',num2str(round(max(CaT_base),5))], ['peak:',num2str(round(max(CaT_drug25),5))], ['peak:',num2str(round(max(CaT_drug50),5))])
    else
        subplot(4,5,i+5)
        hold on
        plot(APt, V_base, 'b', 'LineWidth', 2.5)
        ylim([-300, 85])
        plot(APt, V_drug25, 'r', 'LineWidth', 2.5)
        plot(APt, V_drug50, 'r:', 'LineWidth', 2.5)
        legend(['APD90:',num2str(round(base_APinfo(3))), ', freq:', num2str(round(base_APinfo(4),2))],...
            ['APD90:',num2str(round(drug25_APinfo(3))), ', freq:', num2str(round(drug25_APinfo(4),2))],...
            ['APD90:',num2str(round(drug50_APinfo(3))), ', freq:', num2str(round(drug50_APinfo(4),2))])
        subplot(4,5,i+10)
        hold on
        plot(CaTt, CaT_base, 'k', 'LineWidth', 2.5)
        ylim([0,12e-4])
        plot(CaTt, CaT_drug25, 'g', 'LineWidth', 2.5)
        plot(CaTt, CaT_drug50, 'g:', 'LineWidth', 2.5)
        legend(['peak:',num2str(round(max(CaT_base),5))], ['peak:',num2str(round(max(CaT_drug25),5))], ['peak:',num2str(round(max(CaT_drug50),5))])
    end
end
fig.Position = [0.05 0.05 0.9 0.9] ;
end

function allPlots
%% PLOTS:

load ga_pseudocells cells
makeFigure_bars(cells)
sgtitle('Population variants')
fig = gcf;
fig.PaperUnits = 'inches';
fig.PaperPosition = [0 0 20 8];
print('popbars','-dpng','-r0')

for i = 1:5
    %%
    makeFigure_ionconc(pcl900, caohigh)
    sgtitle('pcl600 + hypercalcemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('caohigh','-dpng','-r0')
    %%
    makeFigure_ionconc(pcl900, caolow)
    sgtitle('pcl600 + hypocalcemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('caolow','-dpng','-r0')
    %%
    makeFigure_ionconc(pcl900, kohigh)
    sgtitle('pcl600 + hyperkalemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('kohigh','-dpng','-r0')
    %%
    makeFigure_ionconc(pcl900, kolow)
    sgtitle('pcl600 + hypokalemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('kolow','-dpng','-r0')
    %%
    makeFigure_drug(pcl900, ical25, ical50)
    sgtitle('pcl600 + ical block')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('icalblock','-dpng','-r0')
    %%
    makeFigure_drug(pcl900, ikr25, ikr50)
    sgtitle('pcl600 + ikr block')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('ikrblock','-dpng','-r0')
    %%
    makeFigure_pacing(pcl900, pcl500)
    sgtitle('pcl600 vs pcl500')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('pacing','-dpng','-r0')
    %%
    makeFigure_spont(spont)
    sgtitle('spontaneous beating')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('spont','-dpng','-r0')
    %%
    makeFigure_ionconc_sp(spont, kolow_sp)
    sgtitle('spontaneous + hypokalemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('kolow_sp','-dpng','-r0')
    %%
    makeFigure_ionconc_sp(spont, kohigh_sp)
    sgtitle('spontaneous + hyperkalemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('kohigh_sp','-dpng','-r0')
    %%
    makeFigure_ionconc_sp(spont, caolow_sp)
    sgtitle('spontaneous + hypocalcemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('caolow_sp','-dpng','-r0')
    %%
    makeFigure_ionconc_sp(spont, caohigh_sp)
    sgtitle('spontaneous + hypercalcemia')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('caohigh_sp','-dpng','-r0')
    %%
    makeFigure_drug_sp(spont, ical25_sp, ical50_sp)
    sgtitle('spontaneous + ical block')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('icalblock_sp','-dpng','-r0')
    %%
    makeFigure_drug_sp(spont, ikr25_sp, ikr50_sp)
    sgtitle('spontaneous + ikr block')
    fig = gcf;
    fig.PaperUnits = 'inches';
    fig.PaperPosition = [0 0 20 16];
    print('ikrblock_sp','-dpng','-r0')
end
end






